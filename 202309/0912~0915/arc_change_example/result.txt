baba@LAPTOP-A6A7D962:~/experiment-report/202309/0912~0915/arc_change_example$ cargo run
   Compiling arc_change_example v0.1.0 (/home/baba/experiment-report/202309/0912~0915/arc_change_example)
warning: unused import: `std::thread::ScopedJoinHandle`
 --> src/main.rs:6:5
  |
6 | use std::thread::ScopedJoinHandle;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused variable: `t2`
  --> src/main.rs:40:13
   |
40 |         let t2 = builder2.spawn_unchecked(|| {
   |             ^^ help: if this is intentional, prefix it with an underscore: `_t2`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: function `f` is never used
 --> src/main.rs:9:4
  |
9 | fn f<T> (t: JoinHandle<T>) {
  |    ^
  |
  = note: `#[warn(dead_code)]` on by default

warning: unused `Result` that must be used
  --> src/main.rs:10:5
   |
10 |     t.join();
   |     ^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
   = note: `#[warn(unused_must_use)]` on by default
help: use `let _ = ...` to ignore the resulting value
   |
10 |     let _ = t.join();
   |     +++++++

warning: unused `Result` that must be used
  --> src/main.rs:38:9
   |
38 |         g(&arc_a);//.unwrap().join();
   |         ^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
help: use `let _ = ...` to ignore the resulting value
   |
38 |         let _ = g(&arc_a);//.unwrap().join();
   |         +++++++

warning: `arc_change_example` (bin "arc_change_example") generated 5 warnings (run `cargo fix --bin "arc_change_example"` to apply 2 suggestions)
    Finished dev [unoptimized + debuginfo] target(s) in 0.57s
     Running `target/debug/arc_change_example`
Hellobbbb

baba@LAPTOP-A6A7D962:~/experiment-report/202309/0912~0915/arc_change_example$