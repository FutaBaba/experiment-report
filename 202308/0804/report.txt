Arc/Rcは参照カウンタを用いたスマートポインタ
書き換えが起きる場合は中身をMutexにする

RcとArcの違いは、スレッドセーフであること
=>SendやSyncが実装されている

ミーティング
・contract => 契約 => 不変条件や前提条件などの関数が守るべき条件のこと
・契約プログラミング=> 計算機科学の基礎
・アラインメント=>一直線にする
・RustBelt はそもそもunsafeの中身が正しいことをチェックするためのもの
・Rust は、正しいかわからない部分をunsafeに包んでいる

To do
・不変条件について復習
・契約プログラミングについて復習
・アラインメントポインタについて理解深める=>アドレスが4の倍数(例)
・Arcを用いて複数スレッドで読み込みをすることはできる?
=>Arcのマニュアルにある例について
・スレッドをまたいでロックを用いずに実装=>できるはず
=>(into_innerの代わりにinto_readのようなもの(取り出さず読み込むだけ))
=>実際はreference countみたいにはなってしまう?
・scoped_threadでborrowingはできる?=>できるが、スコープをいう必要あり
・PC問題についてキューを用いずにArcだけでできる?
・Rustの拡張機能