Mutexのドキュメントの残り2つの例
RustのMutexのマニュアル
https://doc.rust-lang.org/std/sync/struct.Mutex.html

mutex_document_example_2
poisnになったlockがあると、他のスレッドからアクセスできなくなるという例
しかし、into_inner用いれば、アクセスできる

mutex_document_example_3
scopeからぬける(dropする)とlockは解放される!!
途中で解放したい場合は新たなスコープを作る、もしくはdrop関数を用いる
=>Rustのownershipはlockにもあることになる

mutex_panic
mutex_document_example_2の実行結果がよくわからなかった
panicしているだけでは?
=>mainスレッドでguardのlockが取得できるかどうかでguardの中の値が変化するようにプログラムを改変
=>無名のスレッドでpanicさせると、mainスレッドでlockの取得はできていない

mutex_panic_2
上の例で、無名のスレッドでpanicさせなかったとき
=>mainスレッドでlockの取得はできた